// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS.Models;

namespace SMS.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("SMS.Models.TradingPartner.TPAllotedCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TPId")
                        .HasColumnType("int");

                    b.Property<int>("TPCatId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id", "TPId", "TPCatId");

                    b.HasIndex("TPCatId");

                    b.HasIndex("TPId");

                    b.ToTable("TPAllotedCategory");
                });

            modelBuilder.Entity("SMS.Models.TradingPartner.TPCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("TPCategory");
                });

            modelBuilder.Entity("SMS.Models.TradingPartner.TradePartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdNbr")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Name3")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TradePartner");
                });

            modelBuilder.Entity("SMS.Models.TradingPartner.TPAllotedCategory", b =>
                {
                    b.HasOne("SMS.Models.TradingPartner.TPCategory", "TPCatFK")
                        .WithMany()
                        .HasForeignKey("TPCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMS.Models.TradingPartner.TradePartner", "TPFk")
                        .WithMany()
                        .HasForeignKey("TPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TPCatFK");

                    b.Navigation("TPFk");
                });
#pragma warning restore 612, 618
        }
    }
}
